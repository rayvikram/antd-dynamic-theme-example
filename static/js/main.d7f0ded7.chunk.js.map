{"version":3,"sources":["Table.js","App.js","reportWebVitals.js","index.js"],"names":["columns","title","dataIndex","key","render","text","tags","map","tag","color","length","toUpperCase","record","size","name","data","age","address","TT","dataSource","App","className","type","Table","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"uRAEMA,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAAAC,GAAI,OAAI,4BAAIA,MAEtB,CACEJ,MAAO,MACPC,UAAW,MACXC,IAAK,OAEP,CACEF,MAAO,UACPC,UAAW,UACXC,IAAK,WAEP,CACEF,MAAO,OACPE,IAAK,OACLD,UAAW,OACXE,OAAQ,SAAAE,GAAI,OACV,mCACGA,EAAKC,KAAI,SAAAC,GACR,IAAIC,EAAQD,EAAIE,OAAS,EAAI,WAAa,QAI1C,MAHY,UAARF,IACFC,EAAQ,WAGR,cAAC,IAAD,CAAKA,MAAOA,EAAZ,SACGD,EAAIG,eADiBH,UAQlC,CACEP,MAAO,SACPE,IAAK,SACLC,OAAQ,SAACC,EAAMO,GAAP,OACN,eAAC,IAAD,CAAOC,KAAK,SAAZ,UACE,wCAAWD,EAAOE,QAClB,6CAMFC,EAAO,CACX,CACEZ,IAAK,IACLW,KAAM,aACNE,IAAK,GACLC,QAAS,2BACTX,KAAM,CAAC,OAAQ,cAEjB,CACEH,IAAK,IACLW,KAAM,YACNE,IAAK,GACLC,QAAS,yBACTX,KAAM,CAAC,UAET,CACEH,IAAK,IACLW,KAAM,YACNE,IAAK,GACLC,QAAS,yBACTX,KAAM,CAAC,OAAQ,aAKJY,EADJ,kBAAM,cAAC,IAAD,CAAOlB,QAASA,EAASmB,WAAYJ,KC1DvCK,EAXH,kBACV,sBAAKC,UAAU,MAAf,UACE,cAAC,IAAD,CAAQC,KAAK,UAAb,oBACA,sBAAKD,UAAU,kBAAf,UACF,sEACA,cAACE,EAAD,IACA,cAAC,IAAD,WCAaC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS7B,OACP,cAAC,IAAM8B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d7f0ded7.chunk.js","sourcesContent":["import { Table, Tag, Space } from 'antd';\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => <a>{text}</a>,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: 'Tags',\n    key: 'tags',\n    dataIndex: 'tags',\n    render: tags => (\n      <>\n        {tags.map(tag => {\n          let color = tag.length > 5 ? 'geekblue' : 'green';\n          if (tag === 'loser') {\n            color = 'volcano';\n          }\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </>\n    ),\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => (\n      <Space size=\"middle\">\n        <a>Invite {record.name}</a>\n        <a>Delete</a>\n      </Space>\n    ),\n  },\n];\n\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    tags: ['nice', 'developer'],\n  },\n  {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    tags: ['loser'],\n  },\n  {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    tags: ['cool', 'teacher'],\n  },\n];\n\nconst TT = () => <Table columns={columns} dataSource={data} />\nexport default TT","import React from 'react';\nimport { Button } from 'antd';\nimport './App.css';\nimport DynamicAntdTheme from 'dynamic-antd-theme';\nimport Table from \"./Table\"\n\nconst App = () => (\n  <div className=\"App\">\n    <Button type=\"primary\">Button</Button>\n    <div className='theme-container'>\n  <span>Change antd theme(primary color): </span>\n  <Table />\n  <DynamicAntdTheme />\n</div>\n  </div>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}